"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const sourcemap_blender_1 = require("sourcemap-blender");
const FileAnalysis_1 = require("../../analysis/FileAnalysis");
const SourceMap = require("source-map");
const acorn = require("acorn");
class QuantumSourceMap {
    static async generateOriginalSourceMap(file, generatedCode) {
        const blender = new sourcemap_blender_1.Blender({
            parse: source => FileAnalysis_1.acornParse(source),
            originalMap: file.sourceMap,
            sourceName: file.getSourceMapPath(),
            originalAST: file.analysis.ast,
            modifiedCode: generatedCode,
        });
        const data = await blender.blend();
        return data.map;
    }
    static generateSourceMap(code, name) {
        const tokens = [];
        FileAnalysis_1.acornParse(code, {
            onToken: token => tokens.push(token),
        });
        const smGenerator = new SourceMap.SourceMapGenerator({ file: name });
        tokens.some(token => {
            if (token.type.label === "eof")
                return true;
            const lineInfo = acorn.getLineInfo(code, token.start);
            const mapping = {
                original: lineInfo,
                generated: lineInfo,
                source: name,
            };
            if (token.type.label === "name")
                mapping.name = token.value;
            smGenerator.addMapping(mapping);
        });
        smGenerator.setSourceContent(name, code);
        return smGenerator.toString();
    }
}
exports.QuantumSourceMap = QuantumSourceMap;
